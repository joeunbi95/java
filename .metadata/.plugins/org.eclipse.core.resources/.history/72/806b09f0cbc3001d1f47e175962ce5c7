package studentmanager;

import java.util.Scanner;

public class ProgramManager implements progrem {	
	
	//멤버변수 student class, stdCount 변수, 
	private Student[] std = new Student[5];
	private int stdCount; //등록한 학생 카운트
	
	
	@Override
	public void printStudent() {		
		for(int i=0; i<stdCount; i++) {
			//std[i].stdPrint(); //학생정보만 출력
			printStudentOne(std[i]); //학생정보+수강정보
			System.out.println("");
			System.out.println("------------------");
			System.out.println("");
			
		}
		
	}

	@Override
	public void insertStudent(Scanner sc) {
		// 1명의 학생정보 값을 입력받아 객체를 생성한 후 등록 std 배열에 등록
		// 학번, 이름, 주민번호, 학부, 학과
		System.out.println("");
		System.out.println("===== 정보 입력 =====");
		System.out.println("이름>");
		String name = sc.next();
		System.out.println("학번>");
		String sNum = sc.next();
		System.out.println("주민번호>");
		String rNum = sc.next();
		System.out.println("학부>");
		String faculy = sc.next();
		System.out.println("학과>");
		String major = sc.next();
		System.out.println("------------------");
		
		//입력받은 값으로 객체를 생성
		Student s = new Student(sNum, name, rNum, faculy, major);
		
		//배열이 다 찼다면 더 큰배열을 생성 후 배열 복사
		if(stdCount == std.length) {
			Student[] tmp = new Student[stdCount+5]; //새배열
			System.arraycopy(std,0,tmp,0, stdCount);
			std= tmp;
		}			
		
		//std 배열에 등록
		std[stdCount]=s;
		stdCount++; //인원증가(배열 번지 증가)
	}

	@Override
	public void searchStudent(Scanner sc) {
		// 검색할 학생이름을 입력받아 배열에서 탐색 후 있다면
		// 학생정보+수강정보 출력=>printStudentOne()호출
		System.out.println("");
		System.out.println("검색할 학생이름>");
		String name = sc.next();
		int index = -1;
		//전체탐색
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(name)) {
				printStudentOne(std[i]);
				index=i;
				break;
			}			
		}
		
		if(index==-1){
			System.out.println("검색한 이름이 없습니다.");
		}		
	}

	@Override
	public void registerSubject(Scanner sc) {
		// 수강신청을 하고자하는 학생의 이름/학번을 입력받기
		// 그 학생의 배열에 위치 체크
		// 학번이 없다면...
		// 신청할 과목 객체 생성(과목정보 입력받기)
		// 신청 메서드 호출 insertSubject(객체)
		System.out.println("");
		System.out.println("신청학생 이름>");
		String name = sc.next();
		System.out.println("신청학생 학번>");
		String sNum = sc.next();
		
		int index = -1;
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(name) && std[i].getStdNum().equals(sNum)) {	
				System.out.println("신청할 과목>");
				String sj = sc.next();
				Subject jj = new Subject(sj);
				std[i].insertSubject(jj);
				index=i;
				break;
			}						
		}
		
		if(index == -1) {
			System.out.println("검색한 이름과 학번이 다릅니다.");
		}		
	}

	@Override
	public void deleteSubject(Scanner sc) {
		System.out.println("");
		System.out.println("신청학생 이름>");
		String name = sc.next();
		System.out.println("신청학생 학번>");
		String sNum = sc.next();
		
		int index = -1;
		for(int i=0; i<stdCount; i++) {
			if(std[i].getStdName().equals(name) && std[i].getStdNum().equals(sNum)) {	
				System.out.println("삭제할 과목>");
				String sj = sc.next();
				std[i].deleteSubject(sj);
				index=i;
				break;
			}			
		}		
		
		if(index == -1) {
			System.out.println("검색한 이름과 학번이 다릅니다.");
		}		
	}

	//1명의 학생정보+수강정보를 같이 출력하고 싶을 때
	public void printStudentOne(Student s) {
		System.out.println("");
		System.out.println("===== 학생 정보 =====");
		s.stdPrint();
		System.out.println("");
		System.out.println("===== 수강 정보 =====");
		s.subPrint();
	}
}
